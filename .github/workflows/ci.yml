name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  lint-and-test:
    name: Lint & Test (${{ matrix.app }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [ "api", "frontend" ]
    defaults:
      run:
        working-directory: ./${{ matrix.app }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            api/package-lock.json
            frontend/package-lock.json

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test (if present)
        run: npm run test --if-present

  docker-build:
    name: Build Docker images
    runs-on: ubuntu-latest
    needs: [ lint-and-test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr (no push yet)
        if: false
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Metadata (api)
        id: meta_api
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/api
          tags: |
            type=ref,event=branch
            type=sha

      - name: Metadata (frontend)
        id: meta_front
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build api (no push)
        uses: docker/build-push-action@v6
        with:
          context: ./api
          file: ./api/Dockerfile
          push: false
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build frontend (no push)
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: ${{ steps.meta_front.outputs.tags }}
          labels: ${{ steps.meta_front.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
