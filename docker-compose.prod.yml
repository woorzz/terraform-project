services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  api:
    image: ${GHCR_IMAGE_API}:${GHCR_TAG}
    environment:
      NODE_ENV: production
      HOST: 0.0.0.0
      API_PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "3000"
    restart: unless-stopped

  nginx:
    image: ${GHCR_IMAGE_FRONT}:${GHCR_TAG}
    depends_on:
      - api
    ports:
      - "${HTTP_PORT}:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

volumes:
  db-data:
