services:

  
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./api/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 2s
      retries: 30

  api:
    build:
      context: ./api
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      API_PORT: ${API_PORT}
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${API_PORT}:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./api:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      FRONTEND_PORT: ${FRONTEND_PORT}
      FRONTEND_API_BASE_URL: ${FRONTEND_API_BASE_URL}

    ports:
      - "${FRONTEND_PORT}:5173"
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  db-data:
